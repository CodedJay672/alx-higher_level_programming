import class
-------------
    >>> BG = __import__("7-base_geometry").BaseGeometry

Import module documentation
---------------------------
    >>> mod_doc = __import__("7-base_geometry").__doc__

import class documentation
--------------------------
    >>> class_doc = __import__("7-base_geometry").BaseGeometry.__doc__

import function documentation
-----------------------------
    >>> func_doc = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__

check <name>
    >>> bg = BG()
    >>> bg.integer_validator("age", 12)

check <value>
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
        ...
    ValueError: <name> must be greater than 0

check negative <value>
    >>> bg.integer_validator("score", -4)
    Traceback (most recent call last):
        ...
    ValueError: <name> must be greater than 0

check for string
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
        ...
    TypeError: <name> must be an integer


check for no arguments
    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

check for excess arguments
    >>> bg.integer_validator("name", 1, 2)
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

check for fewer arguments
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
    
